@page "/customers"
@using Blazor.Models
@inject HttpClient http




    <div class="container">
        <div class="text-right">
            <button type="submit" class="btn btn-danger" @onclick="DeleteAllCustomers">Delete All Customers</button>
        </div>
        <EditForm class="m-5" Model="@customer" OnSubmit="@CreateCustomer">
            <h5 class="m-3">Create a Customer</h5>
            <div class="form-group">
                <div clss="row">
                    <div class="col">
                        <input type="text" class="form-control" placeholder="Firstname...." @bind="customer.FirstName" />
                    </div>
                    <div class="col">
                        <input type="text" class="form-control" placeholder="Lastname...." @bind="customer.LastName" />
                    </div>

                </div>
            </div>
            <div class="form-group">

                <input type="text" class="form-control" placeholder="Email...." @bind="customer.Email" />
            </div>

            <button type="submit" class="btn btn-success"> Create Customer</button>
        </EditForm>
        <table class="table">
            <thead class="thead-light">

                <tr>
                    <th scope="auto">#</th>
                    <th scope="auto">FirstName</th>
                    <th scope="auto">LastName</th>
                    <th scope="auto" colspan="2">Email</th>
                    <th scope="auto"></th>
                </tr>
            </thead>
            @if(customers!=null)
            {
               <tbody>
                @foreach(var customer in customers)
                {
                   <tr>
                       <th scope="row">@customer.Id</th>
                       <td>@customer.FirstName</td>
                       <td>@customer.LastName</td>
                       <td>@customer.Email</td>
                       <td class="text-center">
                           <span style="cursor:pointer" class="oi oi-trash" @onclick="()=>DeleteCustomer(customer.Id)"></span>
                       </td>
                   </tr>
                }
                </tbody>
            }
            
        </table>





    </div>



@code {

    private List<CustomerModel> customers;
    private CustomerCreateModel customer;

    private async Task GetCustomers()
    {
        customers = await http.GetJsonAsync<List<CustomerModel>>("http://localhost:52789/api/customers");
        StateHasChanged();
    }
    private async Task CreateCustomer()
    {
        await http.PostJsonAsync<CustomerCreateModel>("http://localhost:52789/api/customers",customer);
        customer = new CustomerCreateModel();
        await GetCustomers();
    }
    private async Task DeleteAllCustomers()
    {
        await http.DeleteAsync("http://localhost:52789/api/customers/all");
        await GetCustomers();
    }
    private async Task DeleteCustomer(int id)
    {
        await http.DeleteAsync("http://localhost:52789/api/customers/{id}");
        await GetCustomers();
    }

    protected override async Task OnInitializedAsync()
    {
        customer = new CustomerCreateModel();
        await GetCustomers();
    }

}
